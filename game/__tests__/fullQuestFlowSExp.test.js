const CoopGameLogic = require('../coopGameLogic');

describe('–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∫–≤–µ—Å—Ç–æ–≤ —Å S-expression —Å–∏—Å—Ç–µ–º–æ–π', () => {
    let gameLogic;
    const roomId = 'TEST_SEXP_FLOW';
    const players = {
        princess: { id: 'alice', name: '–ê–ª–∏—Å–∞' },
        helper: { id: 'bob', name: '–ë–æ–±' }
    };

    beforeEach(() => {
        gameLogic = new CoopGameLogic();
        gameLogic.startGame(roomId, players);
    });

    describe('–ö–≤–µ—Å—Ç –ø—Ä–∏–Ω—Ü–µ—Å—Å—ã —á–µ—Ä–µ–∑ S-expression —Å–∏—Å—Ç–µ–º—É', () => {
        test('–ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∫–≤–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ S-expression —Å–∏—Å—Ç–µ–º—É', () => {
            const gameState = gameLogic.lobbyLogic.getGameState(roomId);
            const questIntegration = gameLogic.lobbyLogic.getQuestIntegration(roomId);
            
            console.log('\n=== –ö–í–ï–°–¢ –ü–†–ò–ù–¶–ï–°–°–´ –ß–ï–†–ï–ó S-EXPRESSION –°–ò–°–¢–ï–ú–£ ===');
            
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∫–≤–µ—Å—Ç –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
            const testQuest = `(quest test_princess_quest
              (metadata
                (title "Test Princess Quest")
                (description "A test quest for princess")
                (character princess))
              (triggers
                (on-dialogue royal_advisor
                  (when (and
                    (outfit-is "noble")
                    (at-location throne_room)))))
              (steps
                (step start_quest
                  (description "Start the quest")
                  (require
                    (at-location throne_room)
                    (talking-to royal_advisor))
                  (actions
                    (set-memory "quest_started" true)
                    (show-message "Quest started!")))
                (step complete_quest
                  (description "Complete the quest")
                  (require
                    (has-memory "quest_started"))
                  (actions
                    (complete-quest))))
              (on-complete
                (show-message "Quest completed!")))`;
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–≤–µ—Å—Ç
            try {
                questIntegration.questRunner.loadQuest(testQuest);
                console.log('   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫–≤–µ—Å—Ç –∑–∞–≥—Ä—É–∂–µ–Ω');
            } catch (loadError) {
                console.log('   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–≤–µ—Å—Ç–∞:', loadError.message);
                return;
            }
            
            // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
            console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π');
            expect(gameState.stats.princess.location).toBe('princess_chamber');
            expect(gameState.stats.princess.outfit).toBe('princess_dress');
            
            // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –ø—Ä–∏–Ω—Ü–µ—Å—Å—É –∫ —Å–æ–≤–µ—Ç–Ω–∏–∫—É
            gameState.stats.princess.location = 'throne_room';
            console.log('   ‚úÖ –ü—Ä–∏–Ω—Ü–µ—Å—Å–∞ –≤ —Ç—Ä–æ–Ω–Ω–æ–º –∑–∞–ª–µ –≤ –ø–∞—Ä–∞–¥–Ω–æ–º –ø–ª–∞—Ç—å–µ');
            
            // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–≤–µ—Å—Ç–∞
            console.log('2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–≤–µ—Å—Ç–∞');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–≤–µ—Å—Ç–∞
            questIntegration.questRunner.gameState.currentLocation = 'throne_room';
            questIntegration.questRunner.gameState.currentOutfit = 'noble';
            questIntegration.questRunner.gameState.currentNPC = 'royal_advisor';
            
            const character = { id: 'princess', currentOutfit: 'noble' };
            const canStart = questIntegration.questRunner.canStartQuest('test_princess_quest', character);
            expect(canStart).toBe(true);
            console.log('   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫–≤–µ—Å—Ç –ø—Ä–∏–Ω—Ü–µ—Å—Å—ã –¥–æ—Å—Ç—É–ø–µ–Ω');
            
            // 3. –ù–∞—á–∏–Ω–∞–µ–º –∫–≤–µ—Å—Ç
            console.log('3. –ù–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞');
            const startResult = questIntegration.startQuest('test_princess_quest', true); // force = true for test
            expect(startResult).toBe(true);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–≤–µ—Å—Ç –∞–∫—Ç–∏–≤–µ–Ω
            const questStatus = questIntegration.getCurrentQuestStatus();
            expect(questStatus).toBeDefined();
            expect(questStatus.title).toBe('Test Princess Quest');
            console.log('   ‚úÖ –ö–≤–µ—Å—Ç –Ω–∞—á–∞—Ç:', questStatus.title);
            
            // 4. –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥
            console.log('4. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞');
            let stepResult = questIntegration.processQuestStep();
            if (stepResult && stepResult.processed) {
                console.log('   ‚úÖ –ü–µ—Ä–≤—ã–π —à–∞–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω');
                expect(questIntegration.questRunner.gameState.memory.quest_started).toBe(true);
            }
            
            // 5. –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Ç–æ—Ä–æ–π —à–∞–≥ (–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ)
            console.log('5. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞');
            stepResult = questIntegration.processQuestStep();
            if (stepResult && stepResult.completed) {
                console.log('   ‚úÖ –ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!');
                expect(stepResult.completed).toBe(true);
            }
            
            console.log('üéâ –ö–≤–µ—Å—Ç –ø—Ä–∏–Ω—Ü–µ—Å—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω —á–µ—Ä–µ–∑ S-expression —Å–∏—Å—Ç–µ–º—É!');
        });
    });

    describe('–ö–≤–µ—Å—Ç –ø–æ–º–æ—â–Ω–∏—Ü—ã —á–µ—Ä–µ–∑ S-expression —Å–∏—Å—Ç–µ–º—É', () => {
        test('–ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∫–≤–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ S-expression —Å–∏—Å—Ç–µ–º—É', () => {
            const gameState = gameLogic.lobbyLogic.getGameState(roomId);
            const questIntegration = gameLogic.lobbyLogic.getQuestIntegration(roomId);
            
            console.log('\n=== –ö–í–ï–°–¢ –ü–û–ú–û–©–ù–ò–¶–´ –ß–ï–†–ï–ó S-EXPRESSION –°–ò–°–¢–ï–ú–£ ===');
            
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∫–≤–µ—Å—Ç –¥–ª—è –ø–æ–º–æ—â–Ω–∏—Ü—ã –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
            const testQuest = `(quest test_helper_quest
              (metadata
                (title "Test Helper Quest")
                (description "A test quest for helper")
                (character helper))
              (triggers
                (on-dialogue cook
                  (when (and
                    (outfit-is "common")
                    (at-location kitchen)))))
              (steps
                (step start_quest
                  (description "Start the quest")
                  (require
                    (at-location kitchen)
                    (talking-to cook))
                  (actions
                    (set-memory "helper_quest_started" true)
                    (show-message "Helper quest started!")))
                (step complete_quest
                  (description "Complete the quest")
                  (require
                    (has-memory "helper_quest_started"))
                  (actions
                    (complete-quest))))
              (on-complete
                (show-message "Helper quest completed!")))`;
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–≤–µ—Å—Ç
            try {
                questIntegration.questRunner.loadQuest(testQuest);
                console.log('   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫–≤–µ—Å—Ç –ø–æ–º–æ—â–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∂–µ–Ω');
            } catch (loadError) {
                console.log('   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–≤–µ—Å—Ç–∞:', loadError.message);
                return;
            }
            
            // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
            console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π');
            expect(gameState.stats.helper.location).toBe('princess_chamber');
            expect(gameState.stats.helper.outfit).toBe('common_dress');
            
            // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –ø–æ–º–æ—â–Ω–∏—Ü—É –∫ –ø–æ–≤–∞—Ä—É
            gameState.stats.helper.location = 'kitchen';
            console.log('   ‚úÖ –ü–æ–º–æ—â–Ω–∏—Ü–∞ –Ω–∞ –∫—É—Ö–Ω–µ –≤ –ø—Ä–æ—Å—Ç–æ–º –ø–ª–∞—Ç—å–µ');
            
            // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–≤–µ—Å—Ç–∞
            console.log('2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–≤–µ—Å—Ç–∞');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–≤–µ—Å—Ç–∞
            questIntegration.questRunner.gameState.currentLocation = 'kitchen';
            questIntegration.questRunner.gameState.currentOutfit = 'common';
            questIntegration.questRunner.gameState.currentNPC = 'cook';
            
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∞ –ø–æ–º–æ—â–Ω–∏—Ü—É
            gameState.turnOrder = 'helper';
            
            const character = { id: 'helper', currentOutfit: 'common' };
            const canStart = questIntegration.questRunner.canStartQuest('test_helper_quest', character);
            expect(canStart).toBe(true);
            console.log('   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫–≤–µ—Å—Ç –ø–æ–º–æ—â–Ω–∏—Ü—ã –¥–æ—Å—Ç—É–ø–µ–Ω');
            
            // 3. –ù–∞—á–∏–Ω–∞–µ–º –∫–≤–µ—Å—Ç
            console.log('3. –ù–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞');
            const startResult = questIntegration.startQuest('test_helper_quest', true); // force = true for test
            expect(startResult).toBe(true);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–≤–µ—Å—Ç –∞–∫—Ç–∏–≤–µ–Ω
            const questStatus = questIntegration.getCurrentQuestStatus();
            expect(questStatus).toBeDefined();
            expect(questStatus.title).toBe('Test Helper Quest');
            console.log('   ‚úÖ –ö–≤–µ—Å—Ç –Ω–∞—á–∞—Ç:', questStatus.title);
            
            // 4. –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥
            console.log('4. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞');
            let stepResult = questIntegration.processQuestStep();
            if (stepResult && stepResult.processed) {
                console.log('   ‚úÖ –ü–µ—Ä–≤—ã–π —à–∞–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω');
                expect(questIntegration.questRunner.gameState.memory.helper_quest_started).toBe(true);
            }
            
            // 5. –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Ç–æ—Ä–æ–π —à–∞–≥ (–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ)
            console.log('5. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞');
            stepResult = questIntegration.processQuestStep();
            if (stepResult && stepResult.completed) {
                console.log('   ‚úÖ –ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!');
                expect(stepResult.completed).toBe(true);
            }
            
            console.log('üéâ –ö–≤–µ—Å—Ç –ø–æ–º–æ—â–Ω–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω —á–µ—Ä–µ–∑ S-expression —Å–∏—Å—Ç–µ–º—É!');
        });
    });

    describe('–¢–µ—Å—Ç —Å–º–µ–Ω—ã –æ–¥–µ–∂–¥—ã –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–≤–µ—Å—Ç–æ–≤', () => {
        test('–ø—Ä–∏–Ω—Ü–µ—Å—Å–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–≤–µ—Å—Ç—ã –≤ —Ä–∞–∑–Ω—ã—Ö –æ–¥–µ–∂–¥–∞—Ö', () => {
            const gameState = gameLogic.lobbyLogic.getGameState(roomId);
            const questIntegration = gameLogic.lobbyLogic.getQuestIntegration(roomId);
            
            console.log('\n=== –¢–ï–°–¢ –°–ú–ï–ù–´ –û–î–ï–ñ–î–´ –ò –î–û–°–¢–£–ü–ù–û–°–¢–ò –ö–í–ï–°–¢–û–í ===');
            
            // 1. –ü—Ä–∏–Ω—Ü–µ—Å—Å–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–≤–æ–π –∫–≤–µ—Å—Ç –≤ –ø–∞—Ä–∞–¥–Ω–æ–º –ø–ª–∞—Ç—å–µ
            console.log('1. –ü—Ä–∏–Ω—Ü–µ—Å—Å–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–≤–æ–π –∫–≤–µ—Å—Ç');
            gameState.stats.princess.location = 'throne_room';
            questIntegration.questRunner.gameState.currentLocation = 'throne_room';
            questIntegration.questRunner.gameState.currentOutfit = 'noble';
            questIntegration.questRunner.gameState.currentNPC = 'royal_advisor';
            
            const princessChar = { id: 'princess', currentOutfit: 'noble' };
            expect(questIntegration.questRunner.canStartQuest('helper_secret_potion', princessChar)).toBe(false);
            console.log('   ‚úÖ –ö–≤–µ—Å—Ç –ø–æ–º–æ—â–Ω–∏—Ü—ã –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø—Ä–∏–Ω—Ü–µ—Å—Å–µ (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂)');
            
            // 2. –ü—Ä–∏–Ω—Ü–µ—Å—Å–∞ –º–µ–Ω—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â–Ω–∏—Ü–µ–π –æ–¥–µ–∂–¥–æ–π
            console.log('2. –°–º–µ–Ω–∞ –æ–¥–µ–∂–¥—ã –º–µ–∂–¥—É –ø—Ä–∏–Ω—Ü–µ—Å—Å–æ–π –∏ –ø–æ–º–æ—â–Ω–∏—Ü–µ–π');
            
            // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –æ–±–µ–∏—Ö –≤ —Å–ø–∞–ª—å–Ω—é
            gameState.stats.princess.location = 'princess_chamber';
            gameState.stats.helper.location = 'princess_chamber';
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–º–µ–Ω—ã –æ–¥–µ–∂–¥—ã
            expect(gameLogic.outfitSystem.canSwitchOutfits(gameState, 'princess')).toBe(true);
            
            // –°–æ–∑–¥–∞—ë–º –∏ –ø—Ä–∏–Ω–∏–º–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–º–µ–Ω—É
            const swapRequest = gameLogic.createOutfitSwapRequest(roomId, 'alice', 'princess');
            expect(swapRequest.success).toBe(true);
            
            const swapResult = gameLogic.respondToOutfitSwapRequest(roomId, 'bob', true);
            expect(swapResult.success).toBe(true);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–¥–µ–∂–¥–∞ –ø–æ–º–µ–Ω—è–ª–∞—Å—å
            expect(gameState.stats.princess.outfit).toBe('common_dress');
            expect(gameState.stats.helper.outfit).toBe('princess_dress');
            console.log('   ‚úÖ –û–¥–µ–∂–¥–∞ –ø–æ–º–µ–Ω—è–ª–∞—Å—å: –ø—Ä–∏–Ω—Ü–µ—Å—Å–∞ –≤ –ø—Ä–æ—Å—Ç–æ–º –ø–ª–∞—Ç—å–µ, –ø–æ–º–æ—â–Ω–∏—Ü–∞ –≤ –ø–∞—Ä–∞–¥–Ω–æ–º');
            
            // 3. –ü—Ä–∏–Ω—Ü–µ—Å—Å–∞ –≤ –ø—Ä–æ—Å—Ç–æ–π –æ–¥–µ–∂–¥–µ –ù–ï –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å –∫–≤–µ—Å—Ç –ø–æ–º–æ—â–Ω–∏—Ü—ã (–∫–≤–µ—Å—Ç—ã –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º)
            console.log('3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–≤–µ—Å—Ç–∞–º –ø–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º');
            gameState.stats.princess.location = 'kitchen';
            questIntegration.questRunner.gameState.currentLocation = 'kitchen';
            questIntegration.questRunner.gameState.currentOutfit = 'common';
            questIntegration.questRunner.gameState.currentNPC = 'cook';
            
            const princessCommonChar = { id: 'princess', currentOutfit: 'common' };
            const canStartHelperQuest = questIntegration.questRunner.canStartQuest('helper_secret_potion', princessCommonChar);
            expect(canStartHelperQuest).toBe(false);
            console.log('   ‚úÖ –ö–≤–µ—Å—Ç –ø–æ–º–æ—â–Ω–∏—Ü—ã –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø—Ä–∏–Ω—Ü–µ—Å—Å–µ (–ø—Ä–∏–≤—è–∑–∞–Ω –∫ –ø–µ—Ä—Å–æ–Ω–∞–∂—É helper)');
            
            // 4. –ü–æ–º–æ—â–Ω–∏—Ü–∞ –≤ –ø–∞—Ä–∞–¥–Ω–æ–º –ø–ª–∞—Ç—å–µ –ù–ï –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å –∫–≤–µ—Å—Ç –ø—Ä–∏–Ω—Ü–µ—Å—Å—ã
            console.log('4. –ü–æ–º–æ—â–Ω–∏—Ü–∞ –Ω–µ –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å –∫–≤–µ—Å—Ç –ø—Ä–∏–Ω—Ü–µ—Å—Å—ã');
            gameState.stats.helper.location = 'throne_room';
            questIntegration.questRunner.gameState.currentLocation = 'throne_room';
            questIntegration.questRunner.gameState.currentOutfit = 'noble';
            questIntegration.questRunner.gameState.currentNPC = 'royal_advisor';
            
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∞ –ø–æ–º–æ—â–Ω–∏—Ü—É
            gameState.turnOrder = 'helper';
            
            const helperNobleChar = { id: 'helper', currentOutfit: 'noble' };
            const helperCanStartHelperQuest = questIntegration.questRunner.canStartQuest('helper_secret_potion', helperNobleChar);
            expect(helperCanStartHelperQuest).toBe(false);
            
            // –í S-expression —Å–∏—Å—Ç–µ–º–µ –∫–≤–µ—Å—Ç—ã –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ character –≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –ò –º–æ–≥—É—Ç –∏–º–µ—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –æ–¥–µ–∂–¥–µ
            // –ö–≤–µ—Å—Ç –ø–æ–º–æ—â–Ω–∏—Ü—ã —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ—Å—Ç—É—é –æ–¥–µ–∂–¥—É, –ø–æ—ç—Ç–æ–º—É –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ –ø–∞—Ä–∞–¥–Ω–æ–º –ø–ª–∞—Ç—å–µ
            console.log('   ‚úÖ –ö–≤–µ—Å—Ç –ø–æ–º–æ—â–Ω–∏—Ü—ã –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–º–æ—â–Ω–∏—Ü–µ –≤ –ø–∞—Ä–∞–¥–Ω–æ–º –ø–ª–∞—Ç—å–µ (—Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ—Å—Ç—É—é –æ–¥–µ–∂–¥—É)');
            
            // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ NPC —Ä–µ–∞–≥–∏—Ä—É—é—Ç –Ω–∞ –æ–¥–µ–∂–¥—É, –∞ –Ω–µ –Ω–∞ ID –∏–≥—Ä–æ–∫–∞
            console.log('5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏ NPC –Ω–∞ –æ–¥–µ–∂–¥—É');
            
            // –ü—Ä–∏–Ω—Ü–µ—Å—Å–∞ –≤ –ø—Ä–æ—Å—Ç–æ–π –æ–¥–µ–∂–¥–µ –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å —Å –ø–æ–≤–∞—Ä–æ–º
            gameState.turnOrder = 'princess';
            gameState.stats.princess.location = 'kitchen';
            
            const princessNPCs = gameLogic.getNPCsForLocation('kitchen', gameState, 'princess');
            expect(princessNPCs.length).toBeGreaterThan(0);
            console.log('   ‚úÖ –ü—Ä–∏–Ω—Ü–µ—Å—Å–∞ –≤ –ø—Ä–æ—Å—Ç–æ–π –æ–¥–µ–∂–¥–µ –º–æ–∂–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –ø–æ–≤–∞—Ä–æ–º');
            
            // –ü–æ–º–æ—â–Ω–∏—Ü–∞ –≤ –ø–∞—Ä–∞–¥–Ω–æ–º –ø–ª–∞—Ç—å–µ –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å —Å —Å–æ–≤–µ—Ç–Ω–∏–∫–æ–º
            gameState.turnOrder = 'helper';
            gameState.stats.helper.location = 'throne_room';
            
            const helperNPCs = gameLogic.getNPCsForLocation('throne_room', gameState, 'helper');
            expect(helperNPCs.length).toBeGreaterThan(0);
            console.log('   ‚úÖ –ü–æ–º–æ—â–Ω–∏—Ü–∞ –≤ –ø–∞—Ä–∞–¥–Ω–æ–º –ø–ª–∞—Ç—å–µ –º–æ–∂–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —Å–æ–≤–µ—Ç–Ω–∏–∫–æ–º');
            
            console.log('üéâ –°–∏—Å—Ç–µ–º–∞ —Å–º–µ–Ω—ã –æ–¥–µ–∂–¥—ã –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–≤–µ—Å—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
        });
    });

    describe('–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏', () => {
        test('–∫–≤–µ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑', () => {
            const gameState = gameLogic.lobbyLogic.getGameState(roomId);
            const questIntegration = gameLogic.lobbyLogic.getQuestIntegration(roomId);
            
            console.log('\n=== –¢–ï–°–¢ –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ô –ü–û–í–¢–û–†–ù–û–ì–û –í–´–ü–û–õ–ù–ï–ù–ò–Ø ===');
            
            // 1. –û—Ç–º–µ—á–∞–µ–º –∫–≤–µ—Å—Ç –∫–∞–∫ —É–∂–µ –Ω–∞—á–∞—Ç—ã–π
            questIntegration.questRunner.gameState.startedQuests.add('helper_secret_potion');
            
            // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–≤–µ—Å—Ç –±–æ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            const character = { id: 'helper', currentOutfit: 'common' };
            questIntegration.questRunner.gameState.currentLocation = 'kitchen';
            questIntegration.questRunner.gameState.currentOutfit = 'common';
            questIntegration.questRunner.gameState.currentNPC = 'cook';
            
            const canStartAgain = questIntegration.questRunner.canStartQuest('helper_secret_potion', character);
            expect(canStartAgain).toBe(false);
            console.log('   ‚úÖ –£–∂–µ –Ω–∞—á–∞—Ç—ã–π –∫–≤–µ—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞');
            
            // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –∫–≤–µ—Å—Ç—ã
            questIntegration.questRunner.gameState.completedQuests.add('helper_secret_potion');
            
            const helperChar = { id: 'helper', currentOutfit: 'common' };
            questIntegration.questRunner.gameState.currentLocation = 'kitchen';
            questIntegration.questRunner.gameState.currentOutfit = 'common';
            questIntegration.questRunner.gameState.currentNPC = 'cook';
            
            const canStartCompleted = questIntegration.questRunner.canStartQuest('helper_secret_potion', helperChar);
            expect(canStartCompleted).toBe(false);
            console.log('   ‚úÖ –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–π –∫–≤–µ—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
            
            console.log('üéâ –°–∏—Å—Ç–µ–º–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
        });

        test('–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ª–æ–∫–∞—Ü–∏–π –∏ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏', () => {
            const gameState = gameLogic.lobbyLogic.getGameState(roomId);
            const questIntegration = gameLogic.lobbyLogic.getQuestIntegration(roomId);
            
            console.log('\n=== –¢–ï–°–¢ –¢–†–ï–ë–û–í–ê–ù–ò–ô –õ–û–ö–ê–¶–ò–ô –ò –≠–ö–ò–ü–ò–†–û–í–ö–ò ===');
            
            // 1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è
            questIntegration.questRunner.gameState.currentLocation = 'garden';  // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è
            questIntegration.questRunner.gameState.currentOutfit = 'noble';
            questIntegration.questRunner.gameState.currentNPC = 'royal_advisor';
            
            const charWrongLocation = { id: 'helper', currentOutfit: 'common' };
            const canStartWrongLocation = questIntegration.questRunner.canStartQuest('helper_secret_potion', charWrongLocation);
            expect(canStartWrongLocation).toBe(false);
            console.log('   ‚úÖ –ö–≤–µ—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏');
            
            // 2. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–¥–µ–∂–¥–∞
            questIntegration.questRunner.gameState.currentLocation = 'throne_room';
            questIntegration.questRunner.gameState.currentOutfit = 'common';  // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–¥–µ–∂–¥–∞
            questIntegration.questRunner.gameState.currentNPC = 'royal_advisor';
            
            const charWrongOutfit = { id: 'helper', currentOutfit: 'noble' };
            const canStartWrongOutfit = questIntegration.questRunner.canStartQuest('helper_secret_potion', charWrongOutfit);
            expect(canStartWrongOutfit).toBe(false);
            console.log('   ‚úÖ –ö–≤–µ—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–¥–µ–∂–¥–µ');
            
            // 3. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
            questIntegration.questRunner.gameState.currentLocation = 'kitchen';
            questIntegration.questRunner.gameState.currentOutfit = 'common';
            questIntegration.questRunner.gameState.currentNPC = 'cook';
            
            const charCorrect = { id: 'helper', currentOutfit: 'common' };
            const canStartCorrect = questIntegration.questRunner.canStartQuest('helper_secret_potion', charCorrect);
            expect(canStartCorrect).toBe(true);
            console.log('   ‚úÖ –ö–≤–µ—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö');
            
            console.log('üéâ –°–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
        });
    });
});