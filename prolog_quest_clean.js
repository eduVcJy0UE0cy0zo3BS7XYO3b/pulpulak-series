/**
 * ‚úÖ –§–ò–ù–ê–õ–¨–ù–´–ô –†–ê–ë–û–ß–ò–ô –ü–†–ò–ú–ï–† –ö–í–ï–°–¢–û–í–û–ô –°–ò–°–¢–ï–ú–´ –ù–ê TAU-PROLOG
 */

const pl = require('tau-prolog');

console.log('üéÆ === –ö–í–ï–°–¢–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê –ù–ê TAU-PROLOG === üéÆ\n');

const session = pl.create();

const questProgram = `
% === –ò–ì–†–û–í–û–ï –°–û–°–¢–û–Ø–ù–ò–ï ===
character_location(princess, throne_room).
character_outfit(princess, princess_dress).
character_location(helper, kitchen).
character_outfit(helper, simple_dress).

% === –ë–ê–ó–û–í–´–ï –§–ê–ö–¢–´ ===
character_role(princess, royal).
character_role(helper, servant).

npc(royal_advisor, throne_room).
npc(librarian, library).
npc(cook, kitchen).
npc(herbalist, garden).

quest(princess_lost_relic).
quest(helper_secret_potion).
quest_belongs_to(princess_lost_relic, princess).
quest_belongs_to(helper_secret_potion, helper).

% === –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–Ø –õ–û–ö–ê–¶–ò–ô ===
royal_location(throne_room).
royal_location(library).
servant_location(kitchen).
servant_location(garden).

% === –ö–í–ï–°–¢–û–í–ê–Ø –õ–û–ì–ò–ö–ê ===

% –ö–≤–µ—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –µ—Å–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ –ø–æ–¥—Ö–æ–¥–∏—Ç –∏ –æ–¥–µ–∂–¥–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç
quest_available(Quest, Character) :-
    quest_belongs_to(Quest, Character),
    character_outfit_matches(Character, Quest).

character_outfit_matches(Character, princess_lost_relic) :-
    character_outfit(Character, princess_dress).

character_outfit_matches(Character, helper_secret_potion) :-
    character_outfit(Character, simple_dress).

% –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å NPC
can_talk_to_npc(Character, NPC) :-
    character_location(Character, Location),
    npc(NPC, Location).

npc_gives_quest(royal_advisor, Character, princess_lost_relic) :-
    can_talk_to_npc(Character, royal_advisor),
    character_outfit(Character, princess_dress).

npc_gives_quest(cook, Character, helper_secret_potion) :-
    can_talk_to_npc(Character, cook),
    character_outfit(Character, simple_dress).

% –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—á–∞—Ç—å –∫–≤–µ—Å—Ç
can_start_quest(Character, Quest) :-
    quest_available(Quest, Character),
    npc_gives_quest(NPC, Character, Quest).

% === –£–ú–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ü–û–î–°–ö–ê–ó–û–ö ===

% –ü–æ–¥—Å–∫–∞–∑–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
hint_available(Character, go_to_library) :-
    character_location(Character, throne_room),
    character_outfit(Character, princess_dress),
    quest_available(princess_lost_relic, Character).

hint_available(Character, talk_to_cook) :-
    character_location(Character, kitchen),
    character_outfit(Character, simple_dress),
    quest_available(helper_secret_potion, Character).

hint_available(Character, change_to_simple_dress) :-
    character_outfit(Character, princess_dress),
    character_location(Character, Location),
    servant_location(Location).

hint_available(Character, change_to_royal_dress) :-
    character_outfit(Character, simple_dress),
    character_location(Character, Location),
    royal_location(Location).

% === –ê–ù–ê–õ–ò–ó –ò–ì–†–û–í–û–ô –°–ò–¢–£–ê–¶–ò–ò ===

% –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è —Å–≤–æ–µ–π —Ä–æ–ª–∏
role_location_match(Character, good_match) :-
    character_role(Character, royal),
    character_location(Character, Location),
    royal_location(Location).

role_location_match(Character, good_match) :-
    character_role(Character, servant),
    character_location(Character, Location),
    servant_location(Location).

role_location_match(Character, mismatch) :-
    character_role(Character, royal),
    character_location(Character, Location),
    servant_location(Location).

role_location_match(Character, mismatch) :-
    character_role(Character, servant),
    character_location(Character, Location),
    royal_location(Location).

% –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–µ–π—Å—Ç–≤–∏—è–º
action_recommendation(Character, start_quest(Quest)) :-
    can_start_quest(Character, Quest).

action_recommendation(Character, change_outfit) :-
    hint_available(Character, change_to_simple_dress).

action_recommendation(Character, change_outfit) :-
    hint_available(Character, change_to_royal_dress).

action_recommendation(Character, explore_library) :-
    hint_available(Character, go_to_library).

action_recommendation(Character, talk_to_cook) :-
    hint_available(Character, talk_to_cook).

% === –°–ò–ú–£–õ–Ø–¶–ò–Ø –ò–ì–†–û–í–´–• –°–¶–ï–ù–ê–†–ò–ï–í ===

% –ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –µ—Å–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ –ø–æ–º–µ–Ω—è–µ—Ç –æ–¥–µ–∂–¥—É
scenario_outfit_change(Character, new_quest_available(Quest)) :-
    character_location(Character, Location),
    character_role(Character, Role),
    alternative_outfit(Role, NewOutfit),
    quest_belongs_to(Quest, Character),
    ((NewOutfit = princess_dress, Quest = princess_lost_relic);
     (NewOutfit = simple_dress, Quest = helper_secret_potion)).

alternative_outfit(royal, simple_dress).
alternative_outfit(servant, princess_dress).
`;

console.log('üìö –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–≤–µ—Å—Ç–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É...');
session.consult(questProgram, {
    success: function() {
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!\n');
        runCompleteAnalysis();
    },
    error: function(err) {
        console.log('‚ùå –û—à–∏–±–∫–∞:', err);
    }
});

async function runCompleteAnalysis() {
    console.log('üîç === –ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó –ò–ì–†–û–í–û–ô –°–ò–¢–£–ê–¶–ò–ò ===\n');
    
    console.log('1. üìç –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:');
    await findAll("character_location(Character, Location)", "–ì–¥–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∏");
    await findAll("character_outfit(Character, Outfit)", "–í–æ —á—Ç–æ –æ–¥–µ—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∏");
    
    console.log('\n2. üéØ –ö–í–ï–°–¢–û–í–´–ô –ê–ù–ê–õ–ò–ó:');
    await findAll("quest_available(Quest, Character)", "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–≤–µ—Å—Ç—ã");
    await findAll("can_start_quest(Character, Quest)", "–ì–æ—Ç–æ–≤—ã–µ –∫ –∑–∞–ø—É—Å–∫—É –∫–≤–µ—Å—Ç—ã");
    
    console.log('\n3. üí¨ –°–û–¶–ò–ê–õ–¨–ù–´–ï –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–Ø:');
    await findAll("can_talk_to_npc(Character, NPC)", "–í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã");
    await findAll("npc_gives_quest(NPC, Character, Quest)", "NPC –≥–æ—Ç–æ–≤—ã–µ –¥–∞—Ç—å –∫–≤–µ—Å—Ç—ã");
    
    console.log('\n4. üí° –ò–ù–¢–ï–õ–õ–ï–ö–¢–£–ê–õ–¨–ù–´–ï –ü–û–î–°–ö–ê–ó–ö–ò:');
    await findAll("hint_available(Character, Hint)", "–£–º–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ —Å–∏—Å—Ç–µ–º—ã");
    
    console.log('\n5. üé≠ –ê–ù–ê–õ–ò–ó –†–û–õ–ï–ô –ò –õ–û–ö–ê–¶–ò–ô:');
    await findAll("role_location_match(Character, Match)", "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–æ–ª–∏ –∏ –º–µ—Å—Ç–∞");
    
    console.log('\n6. üöÄ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –î–ï–ô–°–¢–í–ò–Ø–ú:');
    await findAll("action_recommendation(Character, Action)", "–ß—Ç–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –¥–µ–ª–∞—Ç—å —Å–∏—Å—Ç–µ–º–∞");
    
    console.log('\n7. üîÆ –ü–†–û–ì–ù–û–ó–ò–†–û–í–ê–ù–ò–ï –°–¶–ï–ù–ê–†–ò–ï–í:');
    await findAll("scenario_outfit_change(Character, Outcome)", "–ß—Ç–æ —Å–ª—É—á–∏—Ç—Å—è –ø—Ä–∏ —Å–º–µ–Ω–µ –æ–¥–µ–∂–¥—ã");
    
    console.log('\nüéâ === –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê ===');
    console.log('\nüí≠ –í–´–í–û–î–´:');
    console.log('   ‚úÖ Tau-prolog —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏–≥—Ä–æ–≤–æ–π –ª–æ–≥–∏–∫–æ–π');
    console.log('   ‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å —É–º–Ω—ã–µ –≤—ã–≤–æ–¥—ã –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∏–≥—Ä—ã');
    console.log('   ‚úÖ –õ–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–∑–≤–æ–ª—è—é—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏');
    console.log('   ‚úÖ –ú–æ–∂–Ω–æ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∏–≥—Ä–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω–æ');
}

function findAll(query, description) {
    return new Promise((resolve) => {
        console.log(`  üìã ${description}:`);
        session.query(query + '.', {
            success: function(goal) {
                let count = 0;
                
                function getNext() {
                    session.answer(function(answer) {
                        if (answer !== null && answer !== false) {
                            count++;
                            const formatted = session.format_answer(answer);
                            console.log(`     ${count}. ${formatted}`);
                            setTimeout(getNext, 10);
                        } else {
                            if (count === 0) {
                                console.log('     (–Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤)');
                            }
                            resolve();
                        }
                    });
                }
                
                getNext();
            },
            error: function(err) {
                console.log(`     ‚ùå –û–®–ò–ë–ö–ê: ${err}`);
                resolve();
            }
        });
    });
}