import BaseComponent from '../base/BaseComponent.js';

class MainMenuScreen extends BaseComponent {
    template() {
        return `
            <div class="screen main-menu">
                <game-card>
                    <div slot="header">ü§ù –°–æ–≤–º–µ—Å—Ç–Ω–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ</div>
                    <div slot="content">
                        <p>–ò–≥—Ä–∞–π—Ç–µ –≤–¥–≤–æ–µ–º! –û–¥–∏–Ω –∏–≥—Ä–æ–∫ —É–ø—Ä–∞–≤–ª—è–µ—Ç –∫–Ω—è–∂–Ω–æ–π –ü—É–ª–ø—É–ª–∞–∫, –¥—Ä—É–≥–æ–π - —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π "—Å–µ—Å—Ç—Ä–æ–π" (–ø–æ–º–æ—â–Ω–∏—Ü–µ–π –≤–µ–¥—å–º—ã).</p>
                        <p><strong>üé≠ –†–æ–ª–∏:</strong><br>
                        <span class="role-princess">üëë –ö–Ω—è–∂–Ω–∞</span> - –≥–ª–∞–≤–Ω–∞—è –≥–µ—Ä–æ–∏–Ω—è, –∏—â–µ—Ç –ø—Ä–∞–≤–¥—É<br>
                        <span class="role-helper">üßô‚Äç‚ôÄÔ∏è –ü–æ–º–æ—â–Ω–∏—Ü–∞</span> - —Ö—Ä–∞–Ω–∏—Ç —Å–µ–∫—Ä–µ—Ç—ã –≤–µ–¥—å–º—ã</p>
                    </div>
                </game-card>

                <div class="menu-actions">
                    <game-button type="primary" size="large" data-action="create-room">
                        üè† –°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É
                    </game-button>

                    <div class="join-section">
                        <input type="text" id="room-input" class="room-input" 
                               placeholder="ID –∫–æ–º–Ω–∞—Ç—ã" maxlength="10">
                        <game-button type="primary" size="large" data-action="join-room">
                            üö™ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è
                        </game-button>
                    </div>
                </div>
            </div>
        `;
    }

    styles() {
        return `
            .screen {
                max-width: 600px;
                margin: 0 auto;
                padding: 20px;
                animation: fadeIn 0.5s ease-out;
            }

            .menu-actions {
                display: flex;
                flex-direction: column;
                gap: 20px;
                margin-top: 30px;
            }

            .join-section {
                display: flex;
                flex-direction: column;
                gap: 15px;
                align-items: center;
            }

            .room-input {
                padding: 15px;
                font-size: 18px;
                border: 2px solid var(--primary-dark);
                border-radius: 8px;
                text-align: center;
                text-transform: uppercase;
                width: 200px;
            }

            .room-input:focus {
                outline: none;
                border-color: var(--primary-color);
                box-shadow: 0 0 10px rgba(218, 165, 32, 0.3);
            }

            .role-princess { color: #8b0000; font-weight: bold; }
            .role-helper { color: #155724; font-weight: bold; }

            @keyframes fadeIn {
                from { opacity: 0; transform: translateY(20px); }
                to { opacity: 1; transform: translateY(0); }
            }

            @media (max-width: 768px) {
                .screen { padding: 10px; }
                .room-input { width: 100%; }
            }
        `;
    }

    setupEventListeners() {
        this.on('[data-action="create-room"]', 'click', () => {
            window.app.socket.createRoom();
        });

        this.on('[data-action="join-room"]', 'click', () => {
            const roomId = this.$('#room-input').value.trim().toUpperCase();
            if (roomId) {
                window.app.socket.joinRoom(roomId);
            } else {
                this.showError('–í–≤–µ–¥–∏—Ç–µ ID –∫–æ–º–Ω–∞—Ç—ã!');
            }
        });

        this.on('#room-input', 'keypress', (e) => {
            if (e.key === 'Enter') {
                this.$('[data-action="join-room"]').click();
            }
        });
    }

    showError(message) {
        // –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        alert(message);
    }
}

customElements.define('main-menu-screen', MainMenuScreen);
