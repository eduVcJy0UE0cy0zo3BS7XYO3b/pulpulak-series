/**
 * –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–æ–¥–µ–≤–∞–Ω–∏—è –¥–ª—è –∏–≥—Ä—ã Pulpulak
 * –í—Å–µ –ø—Ä–∞–≤–∏–ª–∞ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–µ—Ä–µ–æ–¥–µ–≤–∞–Ω–∏—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è —ç—Ç–æ–π –∏–≥—Ä—ã
 */

class PulpulakOutfitLogic {
    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–æ–¥–µ–≤–∞—Ç—å—Å—è –≤ –¥–∞–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö
     */
    static canSwitchOutfits(gameState, character) {
        return PulpulakOutfitLogic.validateOutfitChange(gameState, character);
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–º–µ–Ω—ã –æ–¥–µ–∂–¥—ã –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º Pulpulak
     */
    static validateOutfitChange(gameState, character) {
        const validators = [
            () => PulpulakOutfitLogic.hasNoNPCs(gameState, character),
            () => PulpulakOutfitLogic.locationAllowsOutfitChange(gameState, character),
            () => PulpulakOutfitLogic.playersInSameLocation(gameState),
            () => PulpulakOutfitLogic.bothPlayersHaveNoNPCs(gameState)
        ];
        
        return validators.every(validate => validate());
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ—Ç –ª–∏ NPC —Ä—è–¥–æ–º —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º
     */
    static hasNoNPCs(gameState, character) {
        const npcsPresent = gameState.stats[character].npcsPresent || [];
        return npcsPresent.length === 0;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–∏ –ª–æ–∫–∞—Ü–∏—è —Å–º–µ–Ω–∏—Ç—å –æ–¥–µ–∂–¥—É
     */
    static locationAllowsOutfitChange(gameState, character) {
        const location = gameState.stats[character].location;
        if (!gameState.gameConfig) return false;
        
        const locationData = gameState.gameConfig.getLocationData();
        return locationData.canChangeOutfit(location);
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ª–∏ –∏–≥—Ä–æ–∫–∏ –≤ –æ–¥–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏
     */
    static playersInSameLocation(gameState) {
        const princessLocation = gameState.stats.princess.location;
        const helperLocation = gameState.stats.helper.location;
        return princessLocation === helperLocation;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ—Ç –ª–∏ NPC —Ä—è–¥–æ–º —Å –æ–±–æ–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏
     */
    static bothPlayersHaveNoNPCs(gameState) {
        const princessNPCs = gameState.stats.princess.npcsPresent || [];
        const helperNPCs = gameState.stats.helper.npcsPresent || [];
        return princessNPCs.length === 0 && helperNPCs.length === 0;
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –≤—ã–±–æ—Ä –¥–ª—è –æ–±–º–µ–Ω–∞ –æ–¥–µ–∂–¥–æ–π
     */
    static createOutfitSwapChoice(character) {
        const otherCharacter = character === 'princess' ? '–ø–æ–º–æ—â–Ω–∏—Ü–µ' : '–∫–Ω—è–∂–Ω–µ';
        return {
            id: 'request_outfit_swap',
            text: 'üëó –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–º–µ–Ω—è—Ç—å—Å—è –æ–¥–µ–∂–¥–æ–π',
            description: `–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å ${otherCharacter} –ø–æ–º–µ–Ω—è—Ç—å—Å—è –Ω–∞—Ä—è–¥–∞–º–∏`,
            isOutfitRequest: true
        };
    }

    /**
     * –í—ã–ø–æ–ª–Ω–∏—Ç—å –æ–±–º–µ–Ω –æ–¥–µ–∂–¥–æ–π
     */
    static executeOutfitSwap(gameState) {
        const princessOutfit = gameState.stats.princess.outfit;
        const helperOutfit = gameState.stats.helper.outfit;
        
        // –ú–µ–Ω—è–µ–º –Ω–∞—Ä—è–¥—ã –º–µ—Å—Ç–∞–º–∏
        gameState.stats.princess.outfit = helperOutfit;
        gameState.stats.helper.outfit = princessOutfit;
        
        return gameState;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–æ–¥–µ—Ç—å—Å—è
     */
    static getOutfitChangeErrorMessage(gameState, character) {
        if (!PulpulakOutfitLogic.hasNoNPCs(gameState, character)) {
            return "–ù–µ–ª—å–∑—è –ø–µ—Ä–µ–æ–¥–µ–≤–∞—Ç—å—Å—è –ø—Ä–∏ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö!";
        }
        
        if (!PulpulakOutfitLogic.locationAllowsOutfitChange(gameState, character)) {
            return "–í —ç—Ç–æ–º –º–µ—Å—Ç–µ –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–æ–¥–µ–≤–∞—Ç—å—Å—è!";
        }
        
        if (!PulpulakOutfitLogic.playersInSameLocation(gameState)) {
            return "–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –æ–¥–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –æ–±–º–µ–Ω–∞ –æ–¥–µ–∂–¥–æ–π!";
        }
        
        if (!PulpulakOutfitLogic.bothPlayersHaveNoNPCs(gameState)) {
            return "–ù–µ–ª—å–∑—è –ø–µ—Ä–µ–æ–¥–µ–≤–∞—Ç—å—Å—è –ø—Ä–∏ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö!";
        }
        
        return "–ü–µ—Ä–µ–æ–¥–µ–≤–∞–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –ø—Ä–∏—á–∏–Ω–µ";
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–µ—Ç –ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –æ–±–º–µ–Ω –æ–¥–µ–∂–¥–æ–π
     */
    static canRequestOutfitSwap(gameState, character, hasActiveRequest = false) {
        if (hasActiveRequest) {
            return false;
        }
        
        return PulpulakOutfitLogic.canSwitchOutfits(gameState, character);
    }
}

module.exports = PulpulakOutfitLogic;