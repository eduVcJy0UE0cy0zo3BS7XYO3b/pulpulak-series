/**
 * –¢–µ—Å—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ - –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
 */

const GameEngineFactory = require('./engine/GameEngineFactory');
const LegacyGameAdapter = require('./engine/adapters/LegacyGameAdapter');
const PulpulakGameConfig = require('./games/pulpulak/PulpulakGameConfig');

console.log('=== –¢–ï–°–¢ –ú–ò–ì–†–ê–¶–ò–ò –ò–ì–†–´ –ü–£–õ–ü–£–õ–ê–ö ===\n');

// 1. –ü—Ä–æ–≤–µ—Ä–∏–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã
console.log('1. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã –≤ —Å–∏—Å—Ç–µ–º–µ:');
const availableGames = GameEngineFactory.getAvailableGames();
availableGames.forEach(game => {
    console.log(`   - ${game.name} (${game.id}) - ${game.maxPlayers} –∏–≥—Ä–æ–∫–∞`);
});

// 2. –°–æ–∑–¥–∞–¥–∏–º –¥–≤–∏–∂–æ–∫ —Å—Ç–∞—Ä—ã–º —Å–ø–æ—Å–æ–±–æ–º (—á–µ—Ä–µ–∑ –∞–¥–∞–ø—Ç–µ—Ä)
console.log('\n2. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –¥–≤–∏–∂–∫–∞ —á–µ—Ä–µ–∑ Legacy Adapter:');
const pulpulakConfig = new PulpulakGameConfig();
const gameLogic = new LegacyGameAdapter(pulpulakConfig);
console.log('   ‚úÖ Legacy –∞–¥–∞–ø—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏');

// 3. –°–æ–∑–¥–∞–¥–∏–º –∏–≥—Ä—É
console.log('\n3. –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –ü—É–ª–ø—É–ª–∞–∫:');
const players = {
    princess: { id: 'player1', name: '–ê–ª–∏—Å–∞' },
    helper: { id: 'player2', name: '–ë–æ–±' }
};

const gameData = gameLogic.startGame('test_room', players);
console.log(`   ‚úÖ –ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤ –∫–æ–º–Ω–∞—Ç–µ: test_room`);
console.log(`   üìã –¢–µ–∫—É—â–∞—è —Å—Ü–µ–Ω–∞: ${gameData.scene.title}`);
console.log(`   üë• –ü–µ—Ä—Å–æ–Ω–∞–∂–∏: ${Object.keys(gameData.characters).join(', ')}`);
console.log(`   üéØ –û—á–µ—Ä–µ–¥—å —Ö–æ–¥–∞: ${gameData.turnOrder}`);

// 4. –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ —ç—Ç–æ —Ç–∞ –∂–µ —Å–∞–º–∞—è –∏–≥—Ä–∞
console.log('\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:');

// –ü—Ä–æ–≤–µ—Ä–∏–º –ª–æ–∫–∞—Ü–∏–∏
const princessLocation = gameData.characters.princess.location;
console.log(`   üìç –ö–Ω—è–∂–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤: ${princessLocation.name}`);

// –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞—Ä—è–¥—ã
const princessOutfit = gameData.characters.princess.outfit;
const helperOutfit = gameData.characters.helper.outfit;
console.log(`   üëó –ù–∞—Ä—è–¥ –∫–Ω—è–∂–Ω—ã: ${princessOutfit}`);
console.log(`   üëî –ù–∞—Ä—è–¥ –ø–æ–º–æ—â–Ω–∏—Ü—ã: ${helperOutfit}`);

// –ü—Ä–æ–≤–µ—Ä–∏–º –≤—ã–±–æ—Ä—ã
const princessChoices = gameData.choices.princess;
const helperChoices = gameData.choices.helper;
console.log(`   üéÆ –í—ã–±–æ—Ä—ã –∫–Ω—è–∂–Ω—ã: ${princessChoices.length} –¥–æ—Å—Ç—É–ø–Ω–æ`);
console.log(`   üéÆ –í—ã–±–æ—Ä—ã –ø–æ–º–æ—â–Ω–∏—Ü—ã: ${helperChoices.length} –¥–æ—Å—Ç—É–ø–Ω–æ`);

// 5. –°–¥–µ–ª–∞–µ–º –≤—ã–±–æ—Ä
console.log('\n5. –¢–µ—Å—Ç –∏–≥—Ä–æ–≤–æ–≥–æ –≤—ã–±–æ—Ä–∞:');
const choice = gameLogic.makeChoice('test_room', 'player1', 'prepare_morning', 'princess');
if (choice.success) {
    console.log(`   ‚úÖ –í—ã–±–æ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω: ${choice.message || '–£—Å–ø–µ—à–Ω–æ'}`);
    const updatedData = gameLogic.getGameData('test_room');
    console.log(`   üìã –ù–æ–≤–∞—è —Å—Ü–µ–Ω–∞: ${updatedData.scene.title}`);
} else {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞: ${choice.message}`);
}

// 6. –ü—Ä–æ–≤–µ—Ä–∏–º –¥–≤–∏–∂–µ–Ω–∏–µ
console.log('\n6. –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è:');
const moveChoice = gameLogic.makeChoice('test_room', 'player1', 'move_to_corridor_upper', 'princess');
if (moveChoice.success) {
    console.log(`   ‚úÖ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: ${moveChoice.message}`);
    const updatedData = gameLogic.getGameData('test_room');
    const newLocation = updatedData.characters.princess.location;
    console.log(`   üìç –ù–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è: ${newLocation.name}`);
} else {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è: ${moveChoice.message}`);
}

// 7. –ü—Ä–æ–≤–µ—Ä–∏–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å API
console.log('\n7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ Legacy API:');
try {
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ä—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
    const hasGames = gameLogic.games.has('test_room');
    const hasOutfitRequests = gameLogic.outfitRequests.has('test_room');
    
    console.log(`   ‚úÖ gameLogic.games —Ä–∞–±–æ—Ç–∞–µ—Ç: ${hasGames ? '–î–∞' : '–ù–µ—Ç'}`);
    console.log(`   ‚úÖ gameLogic.outfitRequests —Ä–∞–±–æ—Ç–∞–µ—Ç: ${hasOutfitRequests ? '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤' : '–û—à–∏–±–∫–∞'}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –º–µ—Ç–æ–¥—ã
    const gameDataCheck = gameLogic.getGameData('test_room');
    console.log(`   ‚úÖ getGameData() —Ä–∞–±–æ—Ç–∞–µ—Ç: ${gameDataCheck ? '–î–∞' : '–ù–µ—Ç'}`);
    
} catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏: ${error.message}`);
}

// 8. –°—Ä–∞–≤–Ω–∏–º —Å –Ω–æ–≤—ã–º –¥–≤–∏–∂–∫–æ–º –Ω–∞–ø—Ä—è–º—É—é
console.log('\n8. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä—è–º—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ –¥–≤–∏–∂–∫–∞:');
try {
    const directEngine = GameEngineFactory.createEngine('pulpulak');
    const directGameData = directEngine.startGame('direct_room', players);
    
    console.log(`   ‚úÖ –ü—Ä—è–º–æ–π –¥–≤–∏–∂–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç`);
    console.log(`   üìã –¢–∞ –∂–µ —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ü–µ–Ω–∞: ${directGameData.scene.title === gameData.scene.title ? '–î–∞' : '–ù–µ—Ç'}`);
    console.log(`   üë• –¢–µ –∂–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏: ${Object.keys(directGameData.characters).length === Object.keys(gameData.characters).length ? '–î–∞' : '–ù–µ—Ç'}`);
    
} catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ –¥–≤–∏–∂–∫–∞: ${error.message}`);
}

console.log('\n=== –†–ï–ó–£–õ–¨–¢–ê–¢ –ú–ò–ì–†–ê–¶–ò–ò ===');
console.log('‚úÖ –ò–≥—Ä–∞ –ü—É–ª–ø—É–ª–∞–∫ —É—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ –Ω–æ–≤—ã–π –¥–≤–∏–∂–æ–∫');
console.log('‚úÖ –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç (100% —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)');
console.log('‚úÖ Legacy API –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
console.log('‚úÖ –ù–æ–≤—ã–π –¥–≤–∏–∂–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å–æ —Å—Ç–∞—Ä—ã–º');
console.log('‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –Ω–æ–≤—ã—Ö –∏–≥—Ä –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–≤–∏–∂–∫–∞');

console.log('\nüìö –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã:');
console.log('1. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–∞—Å–ª–µ–¥—É—è GameConfigInterface');
console.log('2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –µ–≥–æ –≤ GameEngineFactory');
console.log('3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—Ç –∂–µ server.js –∏ socketHandler.js');
console.log('4. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –Ω–æ–≤–æ–π –∏–≥—Ä–æ–π –Ω–∞ —Ç–æ–º –∂–µ –¥–≤–∏–∂–∫–µ!');

// –û—á–∏—Å—Ç–∫–∞
gameLogic.removeGame('test_room');
console.log('\nüßπ –¢–µ—Å—Ç–æ–≤—ã–µ –∏–≥—Ä—ã –æ—á–∏—â–µ–Ω—ã');